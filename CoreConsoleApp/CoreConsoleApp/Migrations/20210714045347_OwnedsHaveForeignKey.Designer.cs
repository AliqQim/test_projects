// <auto-generated />
using System;
using CoreConsoleApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreConsoleApp.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210714045347_OwnedsHaveForeignKey")]
    partial class OwnedsHaveForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreConsoleApp.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("CoreConsoleApp.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("CoreConsoleApp.Zodiac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zodiacs");
                });

            modelBuilder.Entity("CoreConsoleApp.Person", b =>
                {
                    b.HasOne("CoreConsoleApp.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.OwnsMany("CoreConsoleApp.Zamorochka", "OwnZamorochkas", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ZodiacId")
                                .HasColumnType("int");

                            b1.HasKey("PersonId", "Id");

                            b1.HasIndex("ZodiacId");

                            b1.ToTable("Persons_OwnZamorochkas");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasOne("CoreConsoleApp.Zodiac", "Zodiac")
                                .WithMany()
                                .HasForeignKey("ZodiacId")
                                .OnDelete(DeleteBehavior.NoAction)
                                .IsRequired();

                            b1.Navigation("Zodiac");
                        });

                    b.OwnsOne("CoreConsoleApp.Zamorochka", "UnforgivableZamorochkaOfOtherPerson", b1 =>
                        {
                            b1.Property<int>("PersonId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ZodiacId")
                                .HasColumnType("int");

                            b1.HasKey("PersonId");

                            b1.HasIndex("ZodiacId");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasOne("CoreConsoleApp.Zodiac", "Zodiac")
                                .WithMany()
                                .HasForeignKey("ZodiacId")
                                .OnDelete(DeleteBehavior.NoAction)
                                .IsRequired();

                            b1.Navigation("Zodiac");
                        });

                    b.Navigation("Job");

                    b.Navigation("OwnZamorochkas");

                    b.Navigation("UnforgivableZamorochkaOfOtherPerson")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
